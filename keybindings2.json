[
    {
        "key": "ctrl+c",
        "command": "keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybindingFocus && !whenFocus"
    },
    {
        "key": "ctrl+x",
        "command": "editor.action.clipboardCutAction",
        "when": ""
    },
    {
        "key": "delete",
        "command": "deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+v",
        "command": "editor.action.clipboardPasteAction",
        "when": ""
    },
    {
        "key": "shift+ctrl+z",
        "command": "redo",
        "when": ""
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.selectAll",
        "when": ""
    },
    {
        "key": "ctrl+z",
        "command": "undo",
        "when": ""
    },
    {
        "key": "meta+6",
        "command": "workbench.action.showErrorsWarnings",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+back_quote",
        "command": "workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+meta+left",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+meta+h",
        "command": "editor.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
    },
    {
        "key": "ctrl+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "shift+ctrl+subtract",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+subtract",
        "command": "editor.fold",
        "when": "editorFocus && foldingEnabled"
    },
    {
        "key": "shift+f9",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "shift+ctrl+j",
        "command": "editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "meta+q",
        "command": "workbench.action.quit",
        "when": ""
    },
    {
        "key": "ctrl+add",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+ctrl+multiply",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+ctrl+multiply",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+ctrl+multiply",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+ctrl+multiply",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+ctrl+multiply",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+meta+m",
        "command": "editor.action.codeAction",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+ctrl+f",
        "command": "workbench.action.replaceInFiles",
        "when": ""
    },
    {
        "key": "meta+f7",
        "command": "editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+f3",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+meta+f7",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "ctrl+meta+right",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+b",
        "command": "editor.action.goToDeclaration",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+meta+b",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.gotoLine",
        "when": ""
    },
    {
        "key": "ctrl+u",
        "command": "dart.goToSuper",
        "when": "editorTextFocus && editorLangId == 'dart'"
    },
    {
        "key": "shift+ctrl+meta+n",
        "command": "editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
    },
    {
        "key": "shift+ctrl+b",
        "command": "editor.action.goToTypeDefinition",
        "when": "editorHasTypeDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.toggleZenMode",
        "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
        "key": "meta+b",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": ""
    },
    {
        "key": "alt+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+ctrl+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+ctrl+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "f7",
        "command": "editor.action.accessibleDiffViewer.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "shift+meta+close_bracket",
        "command": "workbench.action.nextEditor",
        "when": ""
    },
    {
        "key": "shift+enter",
        "command": "workbench.action.splitEditorRight",
        "when": ""
    },
    {
        "key": "ctrl+meta+o",
        "command": "editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "ctrl+o",
        "command": "editor.action.codeAction",
        "when": "editorTextFocus && javaLSReady && editorLangId == 'java'"
    },
    {
        "key": "shift+f7",
        "command": "editor.action.accessibleDiffViewer.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "shift+meta+open_bracket",
        "command": "workbench.action.previousEditor",
        "when": ""
    },
    {
        "key": "meta+enter",
        "command": "workbench.action.terminal.showQuickFixes",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.openRecent",
        "when": ""
    },
    {
        "key": "ctrl+meta+l",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+meta+t",
        "command": "workbench.action.reopenClosedEditor",
        "when": ""
    },
    {
        "key": "ctrl+r",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+f5",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "shift+meta+r",
        "command": "testing.reRunLastRun",
        "when": ""
    },
    {
        "key": "f9",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "meta+f9",
        "command": "editor.debug.action.runToCursor",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+ctrl+meta+j",
        "command": "selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "meta+comma",
        "command": "workbench.action.openSettings",
        "when": ""
    },
    {
        "key": "shift+f7",
        "command": "workbench.action.debug.stepIntoTarget",
        "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
    },
    {
        "key": "ctrl+back_slash",
        "command": "workbench.action.splitEditor",
        "when": ""
    },
    {
        "key": "f7",
        "command": "workbench.action.debug.stepIntoTarget",
        "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
    },
    {
        "key": "shift+f8",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f8",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+f2",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    }
]